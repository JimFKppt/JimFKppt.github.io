(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{554:function(s,e,a){"use strict";a.r(e);var n=a(21),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Sometimes developers need to use a small class that overrides some methods of another class or interface only "),a("strong",[s._v("once")]),s._v(". In this case, declaring a new class may be superfluous. Fortunately, Java provides a mechanism for creating a class in a single statement without having to declare a new named class. Such classes are called "),a("strong",[s._v("anonymous")]),s._v(" because they don't have name identifiers like "),a("code",[s._v("String")]),s._v(" or "),a("code",[s._v("MyClass")]),s._v(" (but they do have an internal name).")]),s._v(" "),a("h2",{attrs:{id:"what-is-an-anonymous-class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-an-anonymous-class"}},[s._v("#")]),s._v(" What is an anonymous class?")]),s._v(" "),a("p",[s._v("Anonymous classes enable you to declare and instantiate a class at the same time.")]),s._v(" "),a("p",[s._v("An anonymous class always implements an interface or extends another class (concrete or abstract). Here is the common syntax of creating an anonymous class:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("new SuperClassOrInterfaceName() {\n\n    // fields\n\n    // overridden methods\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("The syntax of an anonymous class is an expression. And it's similar to a constructor call except that there is a class definition contained in a block of code.")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("An anonymous class must override all abstract methods of the superclass. That is, all interface methods must be overridden except default methods. If an anonymous class extends a class that has no abstract methods, it doesn't have to override anything.")])]),s._v(" "),a("h2",{attrs:{id:"writing-anonymous-classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-anonymous-classes"}},[s._v("#")]),s._v(" Writing anonymous classes")]),s._v(" "),a("p",[s._v("Let's assume we have the following interface with two methods:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("interface SpeakingEntity {\n\n    void sayHello();\n\n    void sayBye();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("Here is an anonymous class that represents an English-speaking person:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('SpeakingEntity englishSpeakingPerson = new SpeakingEntity() {\n            \n    @Override\n    public void sayHello() {\n        System.out.println("Hello!");\n    }\n\n    @Override\n    public void sayBye() {\n        System.out.println("Bye!");\n    }\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("The anonymous class is declared and instantiated at the same time — as an expression. It overrides both methods of the interface.")]),s._v(" "),a("p",[s._v("We assign an instance of the "),a("strong",[s._v("anonymous class")]),s._v(" to the variable of the interface type. Now, we can invoke overridden methods:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("englishSpeakingPerson.sayHello();\nenglishSpeakingPerson.sayBye();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Of course, the result is")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Hello!\nBye!\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Let's declare and instantiate another anonymous class:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('SpeakingEntity cat = new SpeakingEntity() {\n\n    @Override\n    public void sayHello() {\n        System.out.println("Meow!");\n    }\n\n    @Override\n    public void sayBye() {\n        System.out.println("Meow!");\n    }\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("When we invoke the same methods, we obtain the following result:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Meow!\nMeow!\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("So, "),a("code",[s._v("englishSpeakingPerson")]),s._v(" and "),a("code",[s._v("cat")]),s._v(" are instances of different anonymous classes that implement the same interface.")]),s._v(" "),a("h2",{attrs:{id:"accessing-context-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessing-context-variables"}},[s._v("#")]),s._v(" Accessing context variables")]),s._v(" "),a("p",[s._v("In the body of an anonymous class, it is possible to capture variables from a context where it is defined:")]),s._v(" "),a("ul",[a("li",[s._v("an anonymous class can capture members of its enclosing class (the outer class);")]),s._v(" "),a("li",[s._v("an anonymous class can capture local variables that are declared as "),a("code",[s._v("final")]),s._v(" or are "),a("strong",[s._v("effectively final")]),s._v(" (i.e. the variable is not changed but it doesn't have the "),a("code",[s._v("final")]),s._v(" keyword).")])]),s._v(" "),a("p",[s._v("Here is another anonymous class that implements the "),a("code",[s._v("SpeakingEntity")]),s._v(" interface:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('public class AnonymousClassExample {\n\n    private static String BYE_STRING = "Auf Wiedersehen!"; // static constant\n\n    public static void main(String[] args) {\n\n        final String hello = "Guten Tag!"; // final local variable\n\n        SpeakingEntity germanSpeakingPerson = new SpeakingEntity() {\n\n            @Override\n            public void sayHello() {\n                System.out.println(hello); // it captures the local variable\n            }\n\n            @Override\n            public void sayBye() {\n                System.out.println(BYE_STRING); // it captures the constant field\n            }\n        };\n\n        germanSpeakingPerson.sayHello();\n\n        germanSpeakingPerson.sayBye();\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("The anonymous class captures the constant field "),a("code",[s._v("BYE_STRING")]),s._v(" and the local final variable "),a("code",[s._v("hello")]),s._v(". This code is successfully compiled and prints what we expect:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Guten Tag!\nAuf Wiedersehen!\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("A declaration of a variable or a method in an anonymous class shadows any other declaration in the enclosing scope that has the same name. You cannot access any shadowed declarations by their names.")]),s._v(" "),a("h2",{attrs:{id:"when-to-use-anonymous-classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#when-to-use-anonymous-classes"}},[s._v("#")]),s._v(" When to use anonymous classes")]),s._v(" "),a("p",[s._v("Generally, you should consider using an anonymous class when:")]),s._v(" "),a("ul",[a("li",[s._v("only one instance of the class is needed")]),s._v(" "),a("li",[s._v("the class has a very short body")]),s._v(" "),a("li",[s._v("the class is used right after it's defined")])]),s._v(" "),a("p",[s._v("In this topic, we've considered rather simple anonymous classes to understand the basic syntax, but in real-life applications, they provide a powerful mechanism for creating classes that encapsulate behaviors and pass them to suitable methods. This is a convenient way to interact with parts of our application or with some third-party libraries.")]),s._v(" "),a("p",[s._v("And in the next topic about anonymous classes you will become acquainted with more difficult examples and will dive into the intricacies of anonymous classes. See you soon!")])])}),[],!1,null,null,null);e.default=t.exports}}]);