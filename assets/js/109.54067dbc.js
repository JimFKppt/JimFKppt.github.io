(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{608:function(e,t,s){"use strict";s.r(t);var a=s(21),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Java is primarily an object-oriented language. In such a paradigm, all exceptions are considered objects of special classes organized into a class hierarchy. Understanding this hierarchy is essential both for job interviews and daily programming practice.")]),e._v(" "),s("h2",{attrs:{id:"hierarchy-of-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hierarchy-of-exceptions"}},[e._v("#")]),e._v(" Hierarchy of exceptions")]),e._v(" "),s("p",[e._v("The following picture illustrates the simplified hierarchy of exceptions:")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://ucarecdn.com/dce2aef6-e0e1-408a-ad3e-0eff03b06ec7/",alt:"img"}})]),e._v(" "),s("p",[e._v("The base class for all exceptions is "),s("code",[e._v("java.lang.Throwable")]),e._v(". This class provides a set of common methods for all exceptions:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("String getMessage()")]),e._v(" returns the detailed string message of this exception object;")]),e._v(" "),s("li",[s("code",[e._v("Throwable getCause()")]),e._v(" returns the cause of this exception or "),s("code",[e._v("null")]),e._v(" if the cause is nonexistent or unknown;")]),e._v(" "),s("li",[s("code",[e._v("printStackTrace()")]),e._v(" prints the stack trace on the standard error stream.")])]),e._v(" "),s("p",[e._v("We will return to the methods and constructors of this class in the following topics.")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Throwable")]),e._v(" class has two direct subclasses: "),s("code",[e._v("java.lang.Error")]),e._v(" and "),s("code",[e._v("java.lang.Exception")]),e._v(".")]),e._v(" "),s("ul",[s("li",[e._v("subclasses of the "),s("code",[e._v("Error")]),e._v(" class represent low-level exceptions in the JVM, for example: "),s("code",[e._v("OutOfMemoryError")]),e._v(", "),s("code",[e._v("StackOverflowError")]),e._v(";")]),e._v(" "),s("li",[e._v("subclasses of the "),s("code",[e._v("Exception")]),e._v(" class deal with exceptional events inside applications, such as: "),s("code",[e._v("RuntimeException")]),e._v(", "),s("code",[e._v("IOException")]),e._v(";")]),e._v(" "),s("li",[e._v("the "),s("code",[e._v("RuntimeException")]),e._v(" class is a rather special subclass of "),s("code",[e._v("Exception")]),e._v(". It represents so-called "),s("strong",[e._v("unchecked")]),e._v(" exceptions, including: "),s("code",[e._v("ArithmeticException")]),e._v(", "),s("code",[e._v("NumberFormatException")]),e._v(", "),s("code",[e._v("NullPointerException")]),e._v(".")])]),e._v(" "),s("p",[e._v("While developing an application, you normally will process objects of the "),s("code",[e._v("Exception")]),e._v(" class and its subclasses. We won't discuss "),s("code",[e._v("Error")]),e._v(" and its subclasses here.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),s("p",[e._v("The four basic classes of exceptions ("),s("code",[e._v("Throwable")]),e._v(", "),s("code",[e._v("Exception")]),e._v(", "),s("code",[e._v("RuntimeException")]),e._v(" and "),s("code",[e._v("Error")]),e._v(") are located in the "),s("code",[e._v("java.lang")]),e._v(" package. They do not need to be imported. Yet their subclasses might be placed in different packages.")])]),e._v(" "),s("h2",{attrs:{id:"checked-and-unchecked-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checked-and-unchecked-exceptions"}},[e._v("#")]),e._v(" Checked and unchecked exceptions")]),e._v(" "),s("p",[e._v("All exceptions can be divided into two groups: checked and unchecked. They are functionally equivalent but there is a difference from the compiler's point of view.")]),e._v(" "),s("p",[s("strong",[e._v("1. Checked exceptions")]),e._v(" are represented by the "),s("code",[e._v("Exception")]),e._v(" class, excluding the "),s("code",[e._v("RuntimeException")]),e._v(" subclass. The compiler checks whether the programmer expects the occurrence of such exceptions in a program or not.")]),e._v(" "),s("p",[e._v("If a method throws a checked exception, this must be marked in the declaration using the special "),s("code",[e._v("throws")]),e._v(" keyword. Otherwise, the program will not compile.")]),e._v(" "),s("p",[e._v("Let's take a look at the example. We use the "),s("code",[e._v("Scanner")]),e._v(" class, which you are already familiar with, as a means to read from standard input, to read from a file:")]),e._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("readLineFromFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("throws")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("FileNotFoundException")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Scanner")]),e._v(" scanner "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Scanner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("File")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"file.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// java.io.FileNotFoundException")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" scanner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("nextLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("Here, "),s("code",[e._v("FileNotFoundException")]),e._v(" is a standard checked exception. This constructor of "),s("code",[e._v("Scanner")]),e._v(" declares a "),s("code",[e._v("FileNotFoundException")]),e._v(" exception, because we assume that the specified file may not exist. Most importantly, there is a single line in the method that may throw an exception, so we put the "),s("code",[e._v("throws")]),e._v(" keyword in the method declaration.")]),e._v(" "),s("p",[s("strong",[e._v("2. Unchecked exceptions")]),e._v(" are represented by the "),s("code",[e._v("RuntimeException")]),e._v(" class and all its subclasses. The compiler does not check whether the programmer expects the occurrence of such exceptions in a program.")]),e._v(" "),s("p",[e._v("Here is a method that throws "),s("code",[e._v("NumberFormatException")]),e._v(" when the input string has an invalid format (e.g., "),s("code",[e._v('"abc"')]),e._v(").")]),e._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Long")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("convertStringToLong")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("String")]),e._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Long")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("parseLong")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// It may throw a NumberFormatException")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("This code always successfully compiles without the "),s("code",[e._v("throws")]),e._v(" keyword in the declaration.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),s("p",[e._v("Runtime exceptions may occur anywhere in a program. The compiler doesn't require that you specify runtime exceptions in declarations. Adding them to each method's declaration would reduce the clarity of a program.")])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("Error")]),e._v(" class and its subclasses are also considered as unchecked exceptions. However, they form a separate class.")]),e._v(" "),s("h2",{attrs:{id:"conclusion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),s("p",[e._v("All exceptions are represented by the "),s("code",[e._v("Throwable")]),e._v(" class, which has two subclasses: "),s("code",[e._v("Exception")]),e._v(" and "),s("code",[e._v("Error")]),e._v(". There are also two types of exceptions: checked and unchecked.")]),e._v(" "),s("p",[e._v("Unchecked exceptions are expected by the compiler, so you don't have to handle them. They are represented by the "),s("code",[e._v("RuntimeException")]),e._v(" subclass of the "),s("code",[e._v("Exception")]),e._v(" class. Errors from the "),s("code",[e._v("Error")]),e._v(" class are also considered unchecked.")]),e._v(" "),s("p",[e._v("Checked exceptions have to be handled and indicated explicitly. They are located in all the other subclasses of "),s("code",[e._v("Exception")]),e._v(".")])])}),[],!1,null,null,null);t.default=n.exports}}]);