(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{700:function(t,a,s){"use strict";s.r(a);var e=s(21),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"what-is-the-abstract-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-abstract-class"}},[t._v("#")]),t._v(' What is the "Abstract Class"？')]),t._v(" "),s("blockquote",[s("p",[t._v("在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，"),s("strong",[t._v("如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。")])]),t._v(" "),s("p",[t._v("抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。")]),t._v(" "),s("p",[t._v("由于"),s("strong",[t._v("抽象类不能实例化对象")]),t._v("，所以抽象类必须被继承，才能被使用。也是因为这个原因，通常在设计阶段决定要不要设计抽象类。")]),t._v(" "),s("p",[t._v("父类包含了子类集合的常见的方法，但是由于父类本身是抽象的，所以不能使用这些方法。")]),t._v(" "),s("p",[t._v("在 Java 中抽象类表示的是一种继承关系，一个类只能继承一个抽象类，而一个类却可以实现多个接口。")])]),t._v(" "),s("p",[t._v("Java 语言使用 "),s("code",[t._v("abstract class")]),t._v(" 来定义抽象类")]),t._v(" "),s("h1",{attrs:{id:"what-is-the-abstract-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-abstract-method"}},[t._v("#")]),t._v(' What is the "Abstract Method"?')]),t._v(" "),s("p",[t._v("如果要写一个抽象方法，则其归属的类必须为抽象类。")]),t._v(" "),s("p",[t._v('抽象方法没有"body"：')]),t._v(" "),s("div",{staticClass:"language-Java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("blockquote",[s("p",[t._v("当一个类继承一个抽象类时，该子类必须重写父类中所有的抽象方法。")])]),t._v(" "),s("p",[t._v("如果子类要重写父类的抽象方法，就不能使用 "),s("code",[t._v("super")]),t._v(" 了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);