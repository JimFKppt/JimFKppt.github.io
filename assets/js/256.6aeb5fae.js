(window.webpackJsonp=window.webpackJsonp||[]).push([[256],{755:function(_,v,t){"use strict";t.r(v);var a=t(21),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"数据库设计三大范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计三大范式"}},[_._v("#")]),_._v(" 数据库设计三大范式")]),_._v(" "),t("h3",{attrs:{id:"范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#范式"}},[_._v("#")]),_._v(" 范式？")]),_._v(" "),t("p",[_._v("范式就是指规范。")]),_._v(" "),t("p",[_._v("是否使用范式，取决于项目的需求，没有统一的标准。")]),_._v(" "),t("blockquote",[t("p",[_._v("**范式(Normal Form)**是“符合某一种级别的关系模式的集合，表示一个关系内部各属性之间的联系的合理化程度”。很晦涩吧？实际上你可以把它粗略地理解为一张数据表的表结构所符合的某种设计标准的级别。")]),_._v(" "),t("p",[_._v("数据库范式有六种，分别为"),t("code",[_._v("1NF，2NF，3NF，BCNF，4NF，5N")]),_._v("，一般在设计关系型数据库的时候，能考虑到前三者"),t("code",[_._v("1NF、2NF、3NF")]),_._v("就够了，能用到"),t("code",[_._v("BCNF")]),_._v("就已经很吊了。")])]),_._v(" "),t("h3",{attrs:{id:"是哪三个范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是哪三个范式"}},[_._v("#")]),_._v(" 是哪三个范式？")]),_._v(" "),t("ul",[t("li",[_._v("1NF 保证每列的原子性")]),_._v(" "),t("li",[_._v("2NF 非键字段必须依赖键字段")]),_._v(" "),t("li",[_._v("3NF 消除传递依赖")])]),_._v(" "),t("blockquote",[t("p",[_._v("在范式化的数据库中，每个事实数据会出现并且只出现一次；相反，在反范式化的数据库中，信息是冗余的，可能会存储在多个地方。")]),_._v(" "),t("ul",[t("li",[_._v("第一范式 (1NF)：属性不可分。")]),_._v(" "),t("li",[_._v("第二范式 (2NF)：1NF + 表必须有一个主键 + 非主键必须完全依赖于主键。")]),_._v(" "),t("li",[_._v("第三范式 (3NF)：2NF + 非主键列必须直接依赖于主键，不能存在传递依赖。")])])]),_._v(" "),t("h4",{attrs:{id:"_1nf-保证每列的原子性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1nf-保证每列的原子性"}},[_._v("#")]),_._v(" 1NF 保证每列的原子性")]),_._v(" "),t("p",[_._v("保证列不能再被分割。")]),_._v(" "),t("blockquote",[t("p",[_._v("比如有一张表有如下几个字段："),t("code",[_._v("编号、商品名、进货、销售、备注")])]),_._v(" "),t("p",[_._v("其中 "),t("code",[_._v("进货")]),_._v(" 和 "),t("code",[_._v("销售")]),_._v(" 两者都还可以分出 "),t("code",[_._v("数量")]),_._v(" 和 "),t("code",[_._v("单价")]),_._v(" 等等属性。显然这张表不符合1NF。")])]),_._v(" "),t("h4",{attrs:{id:"_2nf-非键字段必须依赖键字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2nf-非键字段必须依赖键字段"}},[_._v("#")]),_._v(" 2NF 非键字段必须依赖键字段")]),_._v(" "),t("p",[_._v("要满足第二范式（"),t("code",[_._v("2NF")]),_._v("）必须先满足第一范式（"),t("code",[_._v("1NF")]),_._v("）。")]),_._v(" "),t("p",[_._v("任意一个字段都只依赖表中的同一个字段。一个表只用来描述一件事，说白了就是别他妈没事找事。")]),_._v(" "),t("h4",{attrs:{id:"_3nf-消除传递依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3nf-消除传递依赖"}},[_._v("#")]),_._v(" 3NF 消除传递依赖")]),_._v(" "),t("p",[_._v("要满足第三范式（"),t("code",[_._v("3NF")]),_._v("）必须先满足第二范式（"),t("code",[_._v("2NF")]),_._v("）。")]),_._v(" "),t("p",[_._v("要求一个数据库表中不包含已在其它表中已包含的非主键字段。也就是说一个表不能有多余的字段，这个表中的字段该干嘛干嘛，不需要的字段就别进来瞎凑热闹。")]),_._v(" "),t("blockquote",[t("p",[_._v("在一些特殊情况下采用第三范式，比如，需要数据冗余来提高性能的时候。")])])])}),[],!1,null,null,null);v.default=e.exports}}]);