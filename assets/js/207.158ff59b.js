(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{706:function(t,e,o){"use strict";o.r(e);var v=o(21),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"object类"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#object类"}},[t._v("#")]),t._v(" Object类")]),t._v(" "),o("p",[t._v("Object 类是Java中所有类的父类，包括你本人定义的类，它还有一个霸气的名字————"),o("strong",[t._v("超类")]),t._v("。")]),t._v(" "),o("p",[t._v("例如经常使用的 "),o("code",[t._v("toString()")]),t._v(" 就是 Object 类中的一个方法。")]),t._v(" "),o("p",[t._v("​\t所以 "),o("code",[t._v("toString()")]),t._v(" 方法上边都需要加一个 "),o("code",[t._v("@Overide")]),t._v(" 注解来"),o("strong",[t._v("重写")]),t._v(" Object 类中的 "),o("code",[t._v("toString()")]),t._v(" 方法。")])])}),[],!1,null,null,null);e.default=r.exports}}]);